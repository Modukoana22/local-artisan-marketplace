name: Auth CI Pipeline
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DATABASE_URL: "mysql://marketplace_user:password@localhost:3307/artisan_marketplace"
  NEXTAUTH_URL: "http://localhost:3000"
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

jobs:
  auth-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: marketplace_user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: artisan_marketplace
          MYSQL_ROOT_HOST: '%'
        ports: [3307:3306]
        options: >-
          --health-cmd="mysqladmin ping -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        volumes:
          - mysql_data:/var/lib/mysql

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Clear npm cache 
        run: npm cache clean --force
      
      - name: Install dependencies
        run: |
<<<<<<< HEAD
          npm install -g next
=======
          npm install -g next    # Install Next.js globally
>>>>>>> df01baf7ce6fe3183d48b3a91d652b3da5062954
          npm ci
          npm install -g mysql2

      - name: Setup Prisma and Database
        run: |
          npx prisma generate
          npx prisma db push --skip-generate --accept-data-loss
          echo "Database schema synchronized"
      
      - name: Verify Database
        run: |
          mysql -h localhost -P 3307 -umarketplace_user -ppassword artisan_marketplace -e "SHOW TABLES;"
          echo "Prisma version: $(npx prisma --version)"
      
      - name: Run Auth Tests
        run: |
          if [ ! -f jest.setup.js ]; then
            echo "console.log('Jest setup initialized'); module.exports = {};" > jest.setup.js
          fi
          npm test -- __tests__/smoke.test.js --passWithNoTests
      
      - name: Build Application
        run: npx prisma generate && next build